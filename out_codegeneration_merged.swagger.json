{
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "BinarySwitch": {
      "properties": {
        "if": {
          "description": "The interface set supported by this resource",
          "items": {
            "enum": [
              "oic.if.baseline",
              "oic.if.a"
            ],
            "type": "string"
          },
          "minItems": 1,
          "readOnly": true,
          "type": "array"
        },
        "n": {
          "description": "Friendly name of the resource",
          "maxLength": 64,
          "readOnly": true,
          "type": "string"
        },
        "rt": {
          "default": [
            "oic.r.switch.binary"
          ],
          "description": "Resource Type",
          "items": {
            "maxLength": 64,
            "type": "string"
          },
          "minItems": 1,
          "readOnly": true,
          "type": "array"
        },
        "value": {
          "description": "Status of the switch",
          "type": "boolean"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "MNT": {
      "properties": {
        "err": {
          "description": "last HTTP occurred error",
          "maximum": 599,
          "minimum": 399,
          "readOnly": true,
          "type": "integer"
        },
        "fr": {
          "description": "Factory Reset",
          "type": "boolean"
        },
        "if": {
          "description": "The interface set supported by this resource",
          "items": {
            "enum": [
              "oic.if.baseline",
              "oic.if.rw"
            ],
            "type": "string"
          },
          "minItems": 1,
          "readOnly": true,
          "type": "array"
        },
        "n": {
          "description": "Friendly name of the resource",
          "maxLength": 64,
          "readOnly": true,
          "type": "string"
        },
        "rb": {
          "description": "Reboot Action",
          "type": "boolean"
        },
        "rt": {
          "default": [
            "oic.wk.mnt"
          ],
          "description": "Resource Type of the Resource",
          "items": {
            "maxLength": 64,
            "type": "string"
          },
          "minItems": 1,
          "readOnly": true,
          "type": "array"
        }
      }
    },
    "nmon": {
      "properties": {
        "amsrx": {
          "description": "Average received message size in bytes (rx) in the collection period",
          "readOnly": true,
          "type": "integer"
        },
        "amstx": {
          "description": "Average transmitted message size in bytes (tx) in the collection period",
          "readOnly": true,
          "type": "integer"
        },
        "col": {
          "description": "True: Device is collecting values",
          "readOnly": false,
          "type": "boolean"
        },
        "ianaifType": {
          "description": "The type of the network connection, as defined by iana https://www.iana.org/assignments/ianaiftype-mib/ianaiftype-mib",
          "readOnly": true,
          "type": "integer"
        },
        "if": {
          "description": "The interface set supported by this resource",
          "items": {
            "enum": [
              "oic.if.baseline",
              "oic.if.rw"
            ],
            "type": "string"
          },
          "minItems": 1,
          "readOnly": true,
          "type": "array"
        },
        "mmsrx": {
          "description": "Maximum received message size in bytes (rx) in the collection period",
          "readOnly": true,
          "type": "integer"
        },
        "mmstx": {
          "description": "Maximum transmitted message size in bytes (tx) in the collection period",
          "readOnly": true,
          "type": "integer"
        },
        "reset": {
          "description": "True: reset the collected values",
          "readOnly": false,
          "type": "boolean"
        },
        "rt": {
          "default": [
            "oic.wk.nmon"
          ],
          "description": "Resource Type of the Resource",
          "items": {
            "maxLength": 64,
            "type": "string"
          },
          "minItems": 1,
          "readOnly": true,
          "type": "array"
        },
        "rx": {
          "description": "Amount of received kilo bytes from collection start time 'time'",
          "readOnly": true,
          "type": "integer"
        },
        "tx": {
          "description": "Amount of transmitted kilo bytes from collection start time 'time'",
          "readOnly": true,
          "type": "integer"
        }
      },
      "required": [
        "reset",
        "col",
        "ianaifType"
      ]
    },
    "nmon-update": {
      "properties": {
        "col": {
          "description": "True: Device is collecting values",
          "readOnly": false,
          "type": "boolean"
        },
        "id": {
          "anyOf": [
            {
              "maxLength": 64,
              "type": "string"
            },
            {
              "description": "Format pattern according to IETF RFC 4122.",
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
              "type": "string"
            }
          ],
          "description": "Instance ID of this specific resource",
          "readOnly": true
        },
        "if": {
          "description": "The interface set supported by this resource",
          "items": {
            "enum": [
              "oic.if.baseline",
              "oic.if.ll",
              "oic.if.b",
              "oic.if.lb",
              "oic.if.rw",
              "oic.if.r",
              "oic.if.a",
              "oic.if.s"
            ],
            "type": "string"
          },
          "minItems": 1,
          "readOnly": true,
          "type": "array"
        },
        "n": {
          "description": "Friendly name of the resource",
          "maxLength": 64,
          "type": "string"
        },
        "reset": {
          "description": "True: reset the collected values",
          "readOnly": false,
          "type": "boolean"
        },
        "rt": {
          "description": "Resource Type of the Resource",
          "items": {
            "maxLength": 64,
            "type": "string"
          },
          "minItems": 1,
          "readOnly": true,
          "type": "array"
        }
      },
      "required": [
        "reset",
        "col"
      ]
    }
  },
  "info": {
    "license": {
      "name": "copyright 2016-2017 Open Connectivity Foundation, Inc. All rights reserved.",
      "x-description": "Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n        1.  Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n        2.  Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n        THIS SOFTWARE IS PROVIDED BY THE Open Connectivity Foundation, INC. \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE OR WARRANTIES OF NON-INFRINGEMENT, ARE DISCLAIMED.\n        IN NO EVENT SHALL THE Open Connectivity Foundation, INC. OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n        HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
    },
    "title": "Binary Switch",
    "version": "v1.1.0-20160519"
  },
  "parameters": {
    "interface": {
      "enum": [
        "oic.if.baseline",
        "oic.if.a"
      ],
      "in": "query",
      "name": "if",
      "type": "string"
    },
    "interface-all": {
      "enum": [
        "oic.if.baseline",
        "oic.if.rw"
      ],
      "in": "query",
      "name": "if",
      "type": "string"
    },
    "interface-rw": {
      "enum": [
        "oic.if.baseline",
        "oic.if.rw"
      ],
      "in": "query",
      "name": "if",
      "type": "string"
    }
  },
  "paths": {
    "/binaryswitch": {
      "get": {
        "description": "This resource describes a binary switch (on/off).\nThe value is a boolean.\nA value of 'true' means that the switch is on.\nA value of 'false' means that the switch is off.\n",
        "parameters": [
          {
            "$ref": "#/parameters/interface"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BinarySwitch"
            },
            "x-example": {
              "id": "unique_example_id",
              "rt": [
                "oic.r.switch.binary"
              ],
              "value": false
            }
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "$ref": "#/parameters/interface"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BinarySwitch"
            },
            "x-example": {
              "id": "unique_example_id",
              "value": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BinarySwitch"
            },
            "x-example": {
              "id": "unique_example_id",
              "value": true
            }
          }
        }
      }
    },
    "/mnt": {
      "get": {
        "description": "The resource through which a Device is maintained and can be used for diagnostic purposes.\nfr (Factory Reset) is a boolean.\n  The value 0 means No action (Default), the value 1 means Start Factory Reset\nAfter factory reset, this value shall be changed back to the default value\nrb (Reboot) is a boolean.\n  The value 0 means No action (Default), the value 1 means Start Reboot\nAfter Reboot, this value shall be changed back to the default value\nRetrieve the maintenance action status",
        "parameters": [
          {
            "$ref": "#/parameters/interface-all"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MNT"
            },
            "x-example": {
              "err": 503,
              "fr": false,
              "rb": false,
              "rt": [
                "oic.wk.mnt"
              ]
            }
          }
        }
      },
      "post": {
        "description": "Set the maintenance action(s)\n",
        "parameters": [
          {
            "$ref": "#/parameters/interface-rw"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MNT"
            },
            "x-example": {
              "fr": false,
              "rb": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MNT"
            },
            "x-example": {
              "fr": false,
              "rb": false
            }
          }
        }
      }
    },
    "/nmon": {
      "get": {
        "description": "The resource through which a Device can monitor network traffic.\nRetrieve the network monitor action status",
        "parameters": [
          {
            "$ref": "#/parameters/interface-all"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/nmon"
            },
            "x-example": {
              "amsrx": 20,
              "amstx": 35,
              "col": false,
              "ianaifType": 71,
              "mmsrx": 35,
              "mmstx": 50,
              "reset": false,
              "rt": [
                "oic.wk.nmon"
              ],
              "rx": 15,
              "time": "2018-01-30T19:43:37Z",
              "tx": 10
            }
          }
        }
      },
      "post": {
        "description": "Start/Stop collecting and reset the networking monitor resource\n",
        "parameters": [
          {
            "$ref": "#/parameters/interface-rw"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/nmon-update"
            },
            "x-example": {
              "col": true,
              "reset": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/nmon"
            },
            "x-example": {
              "ams-rx": 0,
              "ams-tx": 0,
              "col": true,
              "ianaifType": 71,
              "mms-rx": 0,
              "mms-tx": 0,
              "reset": false,
              "rt": [
                "oic.wk.nmon"
              ],
              "rx": 0,
              "time": "2018-01-30T19:44:37Z",
              "tx": 0
            }
          }
        }
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0"
}